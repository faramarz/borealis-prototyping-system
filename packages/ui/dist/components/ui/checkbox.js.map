{"version":3,"sources":["../../../src/lib/utils.ts","../../../src/components/ui/checkbox.tsx"],"names":["twMerge","clsx","React","jsx","CheckboxPrimitive","Check"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGO,SAAS,MAAM,MAAsB,EAAA;AAC1C,EAAO,OAAAA,qBAAA,CAAQC,SAAK,CAAA,MAAM,CAAC,CAAA;AAC7B;ACAA,IAAM,QAAiB,GAAAC,gBAAA,CAAA,UAAA,CAGrB,CAAC,EAAA,EAAyB,GAAK,KAAA;AAA9B,EAAA,IAAA,EAAA,GAAA,EAAA,EAAE,EARL,SAAA,EAAA,GAQG,EAAgB,EAAA,KAAA,GAAA,SAAA,CAAhB,IAAgB,CAAd,WAAA,CAAA,CAAA;AACH,EAAA,uBAAAC,cAAA;AAAA,IAAmBC,4BAAA,CAAA,IAAA;AAAA,IAAlB,aAAA,CAAA,cAAA,CAAA;AAAA,MACC,GAAA;AAAA,MACA,SAAW,EAAA,EAAA;AAAA,QACT,oQAAA;AAAA,QACA;AAAA;AACF,KAAA,EACI,KANL,CAAA,EAAA;AAAA,MAQC,QAAA,kBAAAD,cAAA;AAAA,QAAmBC,4BAAA,CAAA,SAAA;AAAA,QAAlB;AAAA,UACC,SAAA,EAAW,GAAG,+CAA+C,CAAA;AAAA,UAE7D,QAAA,kBAAAD,cAAA,CAACE,iBAAM,EAAA,EAAA,SAAA,EAAU,SAAU,EAAA;AAAA;AAAA;AAC7B,KAAA;AAAA,GACF;AAAA,CACD;AACD,QAAA,CAAS,cAAgCD,4BAAK,CAAA,IAAA,CAAA,WAAA","file":"checkbox.js","sourcesContent":["import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n} ","import * as React from \"react\";\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\";\nimport { Check } from \"lucide-react\";\nimport { cn } from \"../../lib/utils\";\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary shadow focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n));\nCheckbox.displayName = CheckboxPrimitive.Root.displayName;\n\nexport { Checkbox }; "]}